<project name="tSQLt.sourceforge" default="all">

 <target name="all" depends="init, clr.compile, package.files.copy, set.build.version, package.construct.tsqlt, package.example, package.create, package.extract, db.recreate, db.install.schema, db.install.tests, db.tests.run, db.tests.output, db.tests.check.results, build.example"/>
 <target name="all2008" depends="init, clr.compile, package.files.copy, set.build.version, package.construct.tsqlt, package.example, package.create, package.extract, db.recreate, db.install.schema, db.install.tests, db.install.2008.tests, db.tests.run, db.tests.output, db.tests.check.results, build.example"/>
 <target name="refresh" depends="init, clr.compile, package.files.copy, set.build.version, package.construct.tsqlt, db.refresh.schema, db.refresh.tests"/>
 <target name="refresh2008" depends="init, clr.compile, package.files.copy, set.build.version, package.construct.tsqlt, db.refresh.schema, db.refresh.tests, db.refresh.2008.tests"/>

 <target name="init">
		<delete dir="output"/>
		<delete dir="test"/>
		<mkdir dir="output"/>
		<mkdir dir="test"/>
		<mkdir dir="test/results"/>
	</target>

	<target name="clr.compile">
  <echo message="Compile CLR Command: ${msbuild.path}msbuild.exe tSQLtCLR.csproj /p:Configuration=CruiseControl /nologo"/>
  <exec executable="cmd" dir="../tSQLtCLR/tSQLtCLR/" failonerror="true">
			<arg value="/c"/>
			<arg value="${msbuild.path}msbuild.exe tSQLtCLR.csproj /p:Configuration=CruiseControl /nologo"/>
		</exec>

  <exec executable="cmd" dir="." failonerror="true" outputproperty="clr.version">
   <arg value="/c"/>
   <arg value="cscript //nologo VersionInfo.vbs ../tSQLtCLR/tSQLtCLR/bin/CruiseControl/tSQLtCLR.dll"/>
  </exec>

  <echo message="CLR Version is: ${clr.version}"/>
	</target>

	<target name="package.files.copy">
  <exec executable="cmd" dir="../Source/" failonerror="true" outputproperty="clr.version">
   <arg value="/c"/>
   <arg value="../Build/BuildHelper.exe BuildOrder.txt ../Build/output/test.sql"/>
  </exec>

  <copy file="../Source/tSQLt.class.sql" todir="output"/>
		<copy file="../Source/tSQLtCLR_CreateProcs.sql" todir="output"/>
		<copy file="../Source/SetClrEnabled.sql" todir="output"/>
  <copy file="ReleaseNotes.txt" todir="output"/>
  <copy file="License.txt" todir="output"/>
 </target>

 <target name="set.build.version">
  <replace file="output/ReleaseNotes.txt" token="LATEST-BUILD-NUMBER" value="${clr.version}"/>
  <replace file="output/tSQLtCLR_CreateProcs.sql" token="$LATEST-BUILD-NUMBER$" value="${clr.version}"/>
 </target>
   
 <target name="package.construct.tsqlt">
  <exec executable="cmd" failonerror="true" output="output/CreateAssembly.sql">
			<arg value="/c"/>
			<arg value="CreateAssemblyGenerator.exe tSQLtCLR dbo ../tSQLtCLR/tSQLtCLR/bin/CruiseControl/tSQLtCLR.dll EXTERNAL_ACCESS"/>
		</exec>
		<concat destfile="output/tSQLt.class.sql" append="yes" fixlastline="yes" eol="crlf">
			<filelist dir="output" files="CreateAssembly.sql"/>
			<filelist dir="output" files="tSQLtCLR_CreateProcs.sql"/>
		</concat>
	</target>

 <target name="package.example">
  <concat destfile="output/Example.sql" append="yes" fixlastline="yes" eol="crlf">
   <filelist dir="../Examples" files="CreateDatabase.sql"/>
   <filelist dir="output" files="tSQLt.class.sql"/>
   <filelist dir="../Examples" files="Source.sql"/>
   <filelist dir="../Examples" files="Tests.sql"/>
  </concat>
 </target>

 <target name="package.create">
		<zip destfile="output/tSQLt.zip">
   <fileset file="output/ReleaseNotes.txt"/>
   <fileset file="output/License.txt"/>
   <fileset file="output/tSQLt.class.sql"/>
			<fileset file="output/SetClrEnabled.sql"/>
   <fileset file="output/Example.sql"/>
  </zip>
		<delete>
			<fileset dir="output" excludes="*.zip"/>
		</delete>
	</target>

	<target name="package.extract">
		<unzip src="output/tSQLt.zip" dest="test"/>
		<copy file="../Tests/tSQLt_test.class.sql" todir="test"/>
		<copy file="../Tests/tSQLt_test_TableToText.class.sql" todir="test"/>
  <copy file="../Tests/tSQLtclr_test.sql" todir="test"/>
  <copy file="../Tests/NameAndIdResolution_test.class.sql" todir="test"/>
  <copy file="../Tests/tSQLt_test_TableToText.class.sql" todir="test"/>
  <copy file="../Tests/tSQLt_test_TableToText.2008.class.sql" todir="test"/>
  <copy file="CreateBuildDb.sql" todir="test"/>
		<copy file="GetTestResults.sql" todir="test"/>		
	</target>

	<target name="db.recreate">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d master -E -I -i &quot;test/CreateBuildDb.sql&quot; -v DbName=${db.name} -V11"/>
		</exec>
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/SetClrEnabled.sql&quot; -V11"/>
		</exec>
	</target>

	<target name="db.install.schema">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/tSQLt.class.sql&quot; -V11"/>
		</exec>
	</target>

	<target name="db.refresh.schema">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;output/tSQLt.class.sql&quot; -V11"/>
		</exec>
	</target>

	<target name="db.install.tests">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/tSQLt_test.class.sql&quot; -V11"/>
		</exec>

		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/tSQLtclr_test.sql&quot; -V11"/>
		</exec>

  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/tSQLt_test_TableToText.class.sql&quot; -V11"/>
  </exec>

  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/NameAndIdResolution_test.class.sql&quot; -V11"/>
  </exec>

 </target>

 <target name="db.install.2008.tests">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/tSQLt_test_TableToText.2008.class.sql&quot; -V11"/>
  </exec>

 </target>

 <target name="db.refresh.tests">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;../Tests/tSQLt_test.class.sql&quot; -V11"/>
  </exec>

  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;../Tests/tSQLtclr_test.sql&quot; -V11"/>
  </exec>

  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;../Tests/tSQLt_test_TableToText.class.sql&quot; -V11"/>
  </exec>

  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;../Tests/NameAndIdResolution_test.class.sql&quot; -V11"/>
  </exec>
 </target>

 <target name="db.refresh.2008.tests">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;../Tests/tSQLt_test_TableToText.2008.class.sql&quot; -V11"/>
  </exec>

 </target>

 <target name="db.tests.run">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -Q &quot;EXEC tSQLt.RunAll;&quot;"/>
		</exec>
	</target>

	<target name="db.tests.output">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd -S ${db.server} -d ${db.name} -h-1 -y0 -E -I -i &quot;test/GetTestResults.sql&quot; -o &quot;test/results/TestResults.xml&quot; -V11"/>
		</exec>
	</target>

	<target name="db.tests.check.results">
		<exec executable="cmd" failonerror="true">
			<arg value="/c"/>
			<arg value="sqlcmd  -S ${db.server} -d ${db.name} -h-1 -y0 -E -I -Q &quot;:EXIT(SELECT COUNT(*) FROM tSQLt.TestResult WHERE Result != 'Success')&quot; -V11"/>
		</exec>
	</target>

 <target name="build.example" depends="create.example.database,db.example.tests.create,db.example.tests.run,db.example.tests.output,db.example.tests.check.results"/>

 <target name="create.example.database">
  <concat destfile="test/ExampleToRun.sql" append="yes" fixlastline="yes" eol="crlf">
   <filelist dir="../Examples" files="ExecuteAsSa.sql"/>
   <filelist dir="test" files="Example.sql"/>
  </concat>

  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d ${db.name} -E -I -i &quot;test/ExampleToRun.sql&quot; -V11"/>
  </exec>
 </target>

 

 <target name="db.example.tests.create">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d tSQLt_Example -E -I -i &quot;../Examples/TestThatExamplesAreDeployed.sql&quot; -V11"/>
  </exec>
 </target>

 <target name="db.example.tests.run">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d tSQLt_Example -E -I -Q &quot;EXEC tSQLt.Run 'ExampleDeployed';&quot;"/>
  </exec>
 </target>

 <target name="db.example.tests.output">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd -S ${db.server} -d tSQLt_Example -h-1 -y0 -E -I -i &quot;test/GetTestResults.sql&quot; -o &quot;test/results/ExampleTestResults.xml&quot; -V11"/>
  </exec>
 </target>

 <target name="db.example.tests.check.results">
  <exec executable="cmd" failonerror="true">
   <arg value="/c"/>
   <arg value="sqlcmd  -S ${db.server} -d tSQLt_Example -h-1 -y0 -E -I -Q &quot;:EXIT(SELECT COUNT(*) FROM tSQLt.TestResult WHERE Result != 'Success')&quot; -V11"/>
  </exec>
 </target>


</project>