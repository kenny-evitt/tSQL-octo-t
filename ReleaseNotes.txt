tSQLt Release Notes
===================
An online version of these release notes is available at:
http://tsqlt.org/category/release-notes/

build.11:

BUG FIXES:
1. ApplyConstraint for a Foreign Key that references a Faked Table is fixed.
2. SetClrEnabled.sql utlity file now handles database names with spaces.
3. Test cases whose names contain a percent sign are now displayed correctly 
in the test case output.

NEW FEATURES:
1. Warnings about renaming objects displayed when executing FakeTable or 
ApplyConstraint are now hidden.
2. New method: tSQLt.SuppressOutput suppresses the console output that would
be displayed by executing a command.
3. New method: tSQLt.CaptureOutput logs the console output from executing a 
command into the tSQLt.CaptureOutputLog table.

---------------------------

build.10:

BUG FIXES:
1. Standardized capitalization of table, column, procedure and function names.

NEW FEATURES:
1. Added support for case sensitive databases.

---------------------------

build.9:

BUG FIXES:
1. When using tSQLt.Run or tSQLt.RunTestClass, if an object name on the dbo 
schema had the same name as a test class, the test class could not be executed.

2. If the output of an AssertTableEquals or the length of a test case name was 
too long, an error was be produced.

NEW FEATURES:
1. A new procedure, tSQLt.NewConnection, was added which allows statements to 
be executed synchronously in a different connection context.

---------------------------

build.8a:

BUG FIXES:
1. When executing tSQLt.ResultSetFilter, if the result set metadata contained 
hidden columns then those columns would be returned in the result set output.
The values of those columns would be null. Hidden columns are typically present
when the base tables of a result set contain primary keys or other constraints 
which were not selected. tSQLt.ResultSetFilter has been updated to not return 
the hidden columns.

---------------------------

build.8:

NEW FEATURES:
1. SpyProcedure now supports output parameters. Details are available in the 
User Guide. See: http://www2.sqlity.net/tsqlt/spyprocedure

2. The first major sections of the User Guide are now available at:
http://www.tsqlt.org - On the right hand side is a link for the User Guide.

---------------------------

build.7:

IMPORTANT: tSQLt now utilizes CLR (Common Language Runtime) stored procedures. 
In order to install tSQLt, CLRs must be enabled in SQL Server. The 
SetClrEnabled.sql file has the command which enables CLRs. If CLRs are not 
already enabled, this command must be executed before installing tSQLt.

NEW FEATURES:
1. A new procedure tSQLt.RunAll, executes all test classes created with the 
tSQLt.NewTestClass procedure.

2. Added procedure tSQLt.AssertResultSetsHaveSameMetaData which allows the 
meta data of two result sets to be compared. This compares several properties 
of each column of the result set including the column name, data type, length, 
precision, scale and other properties.

3. Added procedure tSQLt.ResultSetFilter which returns a single result set from
a statement which produces multiple result sets. For example, you want to test 
a stored procedure which executes several select statements. You can now use
ResultSetFilter to choose which result set to emit, and therefore you can 
capture that result set into a table for use with tSQLt.AssertEqualsTable.

4. The results of running tests can now be output in an XML format. After 
calling one of the tSQLt.Run... procedures to execute your test cases, you 
can call tSQLt.XmlResultFormatter to display the results in XML. The format is 
compatible with CruiseControl and can be merged into a build log the same way 
that a JUnit test report is merged.
